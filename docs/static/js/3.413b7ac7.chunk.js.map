{"version":3,"sources":["../node_modules/trianglify/dist/trianglify.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/delaunator/index.js","../node_modules/chroma-js/chroma.js","../node_modules/canvas/browser.js","../node_modules/canvas/lib/parse-font.js","../../src/index.js"],"names":["_interopDefault","ex","Delaunator","require","chroma","canvas","colorbrewer","YlGn","YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr","BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","getScalingRatio","ctx","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","window","devicePixelRatio","isBrowser","document","doc","sDOM","tagName","attrs","children","existingRoot","elem","createElementNS","keys","forEach","k","undefined","setAttribute","c","appendChild","serializeAttrs","entries","filter","map","v","join","sNode","toString","Pattern","_points","_polys","_opts","this","serializer","destSVG","_svgOpts","s","defaultSVGOptions","includeNamespace","coordinateDecimals","svgOpts","points","opts","polys","width","height","roundedPoints","p","x","toFixed","paths","poly","d","vertexIndices","i","hasStroke","strokeWidth","fill","color","css","stroke","svg","xmlns","_toSVG","toSVGTree","destCanvas","_canvasOpts","defaultCanvasOptions","scaling","applyCssScaling","canvasOpts","canvas$1","createCanvas","getContext","drawRatio","style","scale","drawPoly","lineJoin","beginPath","moveTo","lineTo","closePath","fillStyle","strokeStyle","lineWidth","mulberry32","seed","Math","random","a","str","h","length","imul","charCodeAt","xmur3","t","getCentroid","y","interpolateLinear","bias","xPercent","yPercent","xScale","yScale","mix","colorSpace","colorFunctions","freeze","__proto__","sparkle","jitterFactor","jitter","b","shadows","shadowIntensity","darken","defaultOptions","cellSize","variance","xColors","yColors","palette","colorFunction","trianglify","TypeError","rand","randomFromPalette","Array","floor","processColorOpts","colorOpt","isArray","mode","getPoints","geomIndices","from","triangles","salt","cRand","vertices","norm","num","max","min","centroid","push","colCount","rowCount","bleedX","bleedY","cellJitter","getJitter","halfCell","_","col","row","utils","module","exports","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","target","arguments","source","getOwnPropertyDescriptors","defineProperties","__esModule","_defineProperties","props","descriptor","Constructor","protoProps","staticProps","prototype","instance","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","arrayLikeToArray","o","minLen","n","slice","constructor","name","test","len","arr2","EPSILON","pow","EDGE_STACK","Uint32Array","coords","Error","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","Float64Array","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i0","i1","i2","cx","cy","minDist","dist","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","halfedges","orient","center","ax","ay","bx","by","dx","dy","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","abs","start","e","q","_legalize","pseudoAngle","ar","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","getX","defaultGetX","getY","defaultGetY","orientIfSure","px","py","rx","ry","qx","qy","l","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","tmp","limit$2","limit$1","clip_rgb$3","rgb","_clipped","_unclipped","classToType","i$1","list$1","toLowerCase","type$p","type$o","unpack$B","args","keyOrder","split","type$n","last$4","PI$2","PI","clip_rgb","limit","type","unpack","last","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$h","format","autodetect","last$3","clip_rgb$2","type$m","_input","Color$D","me","sorted","sort","list","chk","_rgb","hex","Color_1","chroma$k","Function","bind","Color","concat","version","chroma_1","unpack$A","max$2","rgb2cmyk$1","ref","g","f","rgb2cmyk_1","unpack$z","cmyk2rgb","m","alpha","cmyk2rgb_1","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","cmyk","unpack$x","last$2","rnd","round","hsl2css$1","hsla","hsl2css_1","unpack$w","rgb2hsl$3","Number","NaN","rgb2hsl_1","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css$1","rgba","substr","rgb2css_1","unpack$u","round$5","hsl2rgb$1","assign","t3","t2","t1","h_","hsl2rgb_1","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","trim","named","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","input$d","unpack$t","gl","unpack$s","rgb2hcg$1","delta","_g","rgb2hcg_1","unpack$r","floor$3","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","hcg2rgb_1","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","hcg","unpack$p","round$3","rgb2hex$2","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb_1","u","parseInt","u$1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","indexOf","unpack$o","TWOPI$2","min$2","sqrt$4","acos","rgb2hsi$1","min_","rgb2hsi_1","unpack$n","TWOPI$1","cos$4","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsl","max_","rgb2hsv$1","unpack$j","floor$2","hsv2rgb","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$h","pow$a","rgb2lab$2","ref$1","rgb2xyz","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$g","pow$9","lab2rgb$1","z","lab_xyz","xyz_rgb","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","lab","unpack$e","sqrt$3","atan2$2","atan2","round$2","lab2lch$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch$1","b_","rgb2lch_1","unpack$c","sin$3","sin","cos$3","lch2lab$2","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb$1","L","lch2rgb_1","unpack$a","lch2rgb","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","lch","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color$s","input$5","type$c","w3cx11","hex2rgb","rgb2hex","unpack$8","rgb2num$1","rgb2num_1","type$b","num2rgb","num2rgb_1","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","log","temperature2rgb_1","kelvin","temperature2rgb","unpack$6","rgb2temperature$1","minTemp","maxTemp","eps","chroma$7","Color$p","input$2","rgb2temperature","temperature","unpack$5","cbrt","pow$8","sign$1","sign","rgb2oklab$2","rgb2lrgb","lr","lg","lb","rgb2oklab_1","unpack$4","pow$7","oklab2rgb$1","lrgb2rgb","oklab2rgb_1","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","oklab","unpack$2","rgb2oklab","lab2lch","rgb2oklch$1","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb","oklch2rgb_1","type$7","chroma$5","Color$n","input","rgb2oklch","oklch","Color$m","type$6","mutate","clipped","Color$k","LAB_CONSTANTS$1","amount","brighten","darker","brighter","get","mc","channel","src","Color$i","type$5","pow$6","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","Color$f","premultiply","Color$e","LAB_CONSTANTS","saturate","desaturate","Color$d","type$3","set","charAt","out","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","Color$7","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","reduce","w","_average_lrgb","first","shift","xyz","cnt","A","ci","xyz2","A$1","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","inclusive","ascending","Color$5","scale$1","binom_row","newrow","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","sum","el","bezier_1","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","lighten","screen","overlay","burn","dodge","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","cubehelix","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random_1","code","pow$1","abs$1","data","MAX_VALUE","values","count","min_log","LOG10E","max_log","pb","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","exp","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","Color$1","distance","sum_sq","valid","chroma$1","scales","cool","hot","Viridis","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","factory","parseFont","createElement","createImageData","array","ImageData","loadImage","options","Promise","resolve","reject","image","cleanup","onload","onerror","string","weightRe","RegExp","styleRe","variantRe","stretchRe","sizeFamilyRe","sizeFamily","exec","weight","variant","stretch","font","size","parseFloat","unit","family","replace","substring","index","output","useRef","forceUpdate","useState","svgOutput","useCallback","generateOutput","canvasOutput","choosenOutput","useMemo","method","useEffect","Tag"],"mappings":"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","file":"static/js/3.413b7ac7.chunk.js","sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Delaunator = _interopDefault(require('delaunator'));\nvar chroma = _interopDefault(require('chroma-js'));\nvar canvas = require('canvas');\n\n/*\n * colorbrewer.js\n *\n * Colorbrewer colors, by Cindy Brewer\n */\nvar colorbrewer = {\n  YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n  YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n  GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n  BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n  PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n  PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n  BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n  RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n  PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n  OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n  YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n  YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n  Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n  Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n  Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n  Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n  Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n  Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n  PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n  BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n  PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n  PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n  RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n  RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n  RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n  Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n  RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837']\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getScalingRatio (ctx) {\n  // adapted from https://gist.github.com/callumlocke/cc258a193839691f60dd\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  const devicePixelRatio = typeof window !== 'undefined' && window.devicePixelRatio || 1;\n  const drawRatio = devicePixelRatio / backingStoreRatio;\n  return drawRatio;\n}\n\nconst isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nconst doc = isBrowser && document; // utility for building up SVG node trees with the DOM API\n\nconst sDOM = (tagName, attrs = {}, children, existingRoot) => {\n  const elem = existingRoot || doc.createElementNS('http://www.w3.org/2000/svg', tagName);\n  Object.keys(attrs).forEach(k => attrs[k] !== undefined && elem.setAttribute(k, attrs[k]));\n  children && children.forEach(c => elem.appendChild(c));\n  return elem;\n}; // serialize attrs object to XML attributes. Assumes everything is already\n// escaped (safe input).\n\n\nconst serializeAttrs = attrs => Object.entries(attrs).filter(([_, v]) => v !== undefined).map(([k, v]) => `${k}='${v}'`).join(' '); // minimal XML-tree builder for use in Node\n\n\nconst sNode = (tagName, attrs = {}, children) => ({\n  tagName,\n  attrs,\n  children,\n  toString: () => `<${tagName} ${serializeAttrs(attrs)}>${children ? children.join('') : ''}</${tagName}>`\n});\n\nclass Pattern {\n  constructor(_points, _polys, _opts) {\n    _defineProperty(this, \"_toSVG\", (serializer, destSVG, _svgOpts = {}) => {\n      const s = serializer;\n      const defaultSVGOptions = {\n        includeNamespace: true,\n        coordinateDecimals: 1\n      };\n      const svgOpts = { ...defaultSVGOptions,\n        ..._svgOpts\n      };\n      const {\n        points,\n        opts,\n        polys\n      } = this;\n      const {\n        width,\n        height\n      } = opts; // only round points if the coordinateDecimals option is non-negative\n      // set coordinateDecimals to -1 to disable point rounding\n\n      const roundedPoints = svgOpts.coordinateDecimals < 0 ? points : points.map(p => p.map(x => +x.toFixed(svgOpts.coordinateDecimals)));\n      const paths = polys.map(poly => {\n        const xys = poly.vertexIndices.map(i => `${roundedPoints[i][0]},${roundedPoints[i][1]}`);\n        const d = 'M' + xys.join('L') + 'Z';\n        const hasStroke = opts.strokeWidth > 0; // shape-rendering crispEdges resolves the antialiasing issues, at the\n        // potential cost of some visual degradation. For the best performance\n        // *and* best visual rendering, use Canvas.\n\n        return s('path', {\n          d,\n          fill: opts.fill ? poly.color.css() : undefined,\n          stroke: hasStroke ? poly.color.css() : undefined,\n          'stroke-width': hasStroke ? opts.strokeWidth : undefined,\n          'stroke-linejoin': hasStroke ? 'round' : undefined,\n          'shape-rendering': opts.fill ? 'crispEdges' : undefined\n        });\n      });\n      const svg = s('svg', {\n        xmlns: svgOpts.includeNamespace ? 'http://www.w3.org/2000/svg' : undefined,\n        width,\n        height\n      }, paths, destSVG);\n      return svg;\n    });\n\n    _defineProperty(this, \"toSVGTree\", svgOpts => this._toSVG(sNode, null, svgOpts));\n\n    _defineProperty(this, \"toSVG\", isBrowser ? (destSVG, svgOpts) => this._toSVG(sDOM, destSVG, svgOpts) : (destSVG, svgOpts) => this.toSVGTree(svgOpts));\n\n    _defineProperty(this, \"toCanvas\", (destCanvas, _canvasOpts = {}) => {\n      const defaultCanvasOptions = {\n        scaling: isBrowser ? 'auto' : false,\n        applyCssScaling: !!isBrowser\n      };\n      const canvasOpts = { ...defaultCanvasOptions,\n        ..._canvasOpts\n      };\n      const {\n        points,\n        polys,\n        opts\n      } = this;\n      const canvas$1 = destCanvas || canvas.createCanvas(opts.width, opts.height); // doc.createElement('canvas')\n\n      const ctx = canvas$1.getContext('2d');\n\n      if (canvasOpts.scaling) {\n        const drawRatio = canvasOpts.scaling === 'auto' ? getScalingRatio(ctx) : canvasOpts.scaling;\n\n        if (drawRatio !== 1) {\n          // set the 'real' canvas size to the higher width/height\n          canvas$1.width = opts.width * drawRatio;\n          canvas$1.height = opts.height * drawRatio;\n\n          if (canvasOpts.applyCssScaling) {\n            // ...then scale it back down with CSS\n            canvas$1.style.width = opts.width + 'px';\n            canvas$1.style.height = opts.height + 'px';\n          }\n        } else {\n          // this is a normal 1:1 device: don't apply scaling\n          canvas$1.width = opts.width;\n          canvas$1.height = opts.height;\n\n          if (canvasOpts.applyCssScaling) {\n            canvas$1.style.width = '';\n            canvas$1.style.height = '';\n          }\n        }\n\n        ctx.scale(drawRatio, drawRatio);\n      }\n\n      const drawPoly = (poly, fill, stroke) => {\n        const vertexIndices = poly.vertexIndices;\n        ctx.lineJoin = 'round';\n        ctx.beginPath();\n        ctx.moveTo(points[vertexIndices[0]][0], points[vertexIndices[0]][1]);\n        ctx.lineTo(points[vertexIndices[1]][0], points[vertexIndices[1]][1]);\n        ctx.lineTo(points[vertexIndices[2]][0], points[vertexIndices[2]][1]);\n        ctx.closePath();\n\n        if (fill) {\n          ctx.fillStyle = fill.color.css();\n          ctx.fill();\n        }\n\n        if (stroke) {\n          ctx.strokeStyle = stroke.color.css();\n          ctx.lineWidth = stroke.width;\n          ctx.stroke();\n        }\n      };\n\n      if (opts.fill && opts.strokeWidth < 1) {\n        // draw background strokes at edge bounds to solve for white gaps due to\n        // canvas antialiasing. See https://stackoverflow.com/q/19319963/381299\n        polys.forEach(poly => drawPoly(poly, null, {\n          color: poly.color,\n          width: 2\n        }));\n      } // draw visible fills and strokes\n\n\n      polys.forEach(poly => drawPoly(poly, opts.fill && {\n        color: poly.color\n      }, opts.strokeWidth > 0 && {\n        color: poly.color,\n        width: opts.strokeWidth\n      }));\n      return canvas$1;\n    });\n\n    this.points = _points;\n    this.polys = _polys;\n    this.opts = _opts;\n  }\n\n}\n\n// Fast seeded RNG adapted from the public-domain implementation\n// by @byrc: https://github.com/bryc/code/blob/master/jshash/PRNGs.md\n//\n// Usage:\n// const randFn = mulberry32('string seed')\n// const randomNumber = randFn() // [0, 1] random float\nfunction mulberry32(seed) {\n  if (!seed) {\n    seed = Math.random().toString(36);\n  } // support no-seed usage\n\n\n  var a = xmur3(seed)();\n  return function () {\n    a |= 0;\n    a = a + 0x6D2B79F5 | 0;\n    var t = Math.imul(a ^ a >>> 15, 1 | a);\n    t = t + Math.imul(t ^ t >>> 7, 61 | t) ^ t;\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  };\n}\n\nfunction xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = h << 13 | h >>> 19;\n  }\n\n  return function () {\n    h = Math.imul(h ^ h >>> 16, 2246822507);\n    h = Math.imul(h ^ h >>> 13, 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\n// Given an array of coordinates representing a triangle, find the centroid\n// of the triangle and return it as an {x, y} object\n// Accepts a single [[x, y], [x, y], [x, y]] argument\nconst getCentroid = d => {\n  return {\n    x: (d[0][0] + d[1][0] + d[2][0]) / 3,\n    y: (d[0][1] + d[1][1] + d[2][1]) / 3\n  };\n};\n\n//\n// Usage example:\n//\n// const pattern = trianglify({\n//  width: 300,\n//  height: 200,\n//  colorFunction: trianglify.colorFunctions.sparkle(0.2)\n// })\n//\n// the snippet above gives you a trianglify pattern with a 20% random\n// jitter applied to the x and y gradient scales\n// Linear interpolation of two gradients, one for the x and one for the y\n// axis. This is the default Trianglify color function.\n// The bias parameter controls how prevalent the y axis is versus the x axis\n\nconst interpolateLinear = (bias = 0.5) => ({\n  xPercent,\n  yPercent,\n  xScale,\n  yScale,\n  opts\n}) => chroma.mix(xScale(xPercent), yScale(yPercent), bias, opts.colorSpace); // Give the pattern a 'sparkle' effect by introducing random noise into the\n// x and y gradients, making for higher contrast between cells.\n\nconst sparkle = (jitterFactor = 0.15) => ({\n  xPercent,\n  yPercent,\n  xScale,\n  yScale,\n  opts,\n  random\n}) => {\n  const jitter = () => (random() - 0.5) * jitterFactor;\n\n  const a = xScale(xPercent + jitter());\n  const b = yScale(yPercent + jitter());\n  return chroma.mix(a, b, 0.5, opts.colorSpace);\n}; // This is similar to the sparkle effect, but instead of swapping colors around\n// it darkens cells by a random amount. The shadowIntensity parameter controls\n// how dark the darkest shadows are.\n\nconst shadows = (shadowIntensity = 0.8) => {\n  return ({\n    xPercent,\n    yPercent,\n    xScale,\n    yScale,\n    opts,\n    random\n  }) => {\n    const a = xScale(xPercent);\n    const b = yScale(yPercent);\n    const color = chroma.mix(a, b, 0.5, opts.colorSpace);\n    return color.darken(shadowIntensity * random());\n  };\n};\n\nvar colorFunctions = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  interpolateLinear: interpolateLinear,\n  sparkle: sparkle,\n  shadows: shadows\n});\n\n/*\n * Trianglify.js\n * by @qrohlf\n *\n * Licensed under the GPLv3\n */\nconst defaultOptions = {\n  width: 600,\n  height: 400,\n  cellSize: 75,\n  variance: 0.75,\n  seed: null,\n  xColors: 'random',\n  yColors: 'match',\n  palette: colorbrewer,\n  colorSpace: 'lab',\n  colorFunction: interpolateLinear(0.5),\n  fill: true,\n  strokeWidth: 0,\n  points: null\n}; // This function does the \"core\" render-independent work:\n//\n// 1. Parse and munge options\n// 2. Setup cell geometry\n// 3. Generate random points within cell geometry\n// 4. Use the Delaunator library to run the triangulation\n// 5. Do color interpolation to establish the fundamental coloring of the shapes\n\nfunction trianglify(_opts = {}) {\n  Object.keys(_opts).forEach(k => {\n    if (defaultOptions[k] === undefined) {\n      throw TypeError(`Unrecognized option: ${k}`);\n    }\n  });\n  const opts = { ...defaultOptions,\n    ..._opts\n  };\n\n  if (!(opts.height > 0)) {\n    throw TypeError(`invalid height: ${opts.height}`);\n  }\n\n  if (!(opts.width > 0)) {\n    throw TypeError(`invalid width: ${opts.width}`);\n  } // standard randomizer, used for point gen and layout\n\n\n  const rand = mulberry32(opts.seed);\n\n  const randomFromPalette = () => {\n    if (opts.palette instanceof Array) {\n      return opts.palette[Math.floor(rand() * opts.palette.length)];\n    }\n\n    const keys = Object.keys(opts.palette);\n    return opts.palette[keys[Math.floor(rand() * keys.length)]];\n  }; // The first step here is to set up our color scales for the X and Y axis.\n  // First, munge the shortcut options like 'random' or 'match' into real color\n  // arrays. Then, set up a Chroma scale in the appropriate color space.\n\n\n  const processColorOpts = colorOpt => {\n    switch (true) {\n      case Array.isArray(colorOpt):\n        return colorOpt;\n\n      case !!opts.palette[colorOpt]:\n        return opts.palette[colorOpt];\n\n      case colorOpt === 'random':\n        return randomFromPalette();\n\n      default:\n        throw TypeError(`Unrecognized color option: ${colorOpt}`);\n    }\n  };\n\n  const xColors = processColorOpts(opts.xColors);\n  const yColors = opts.yColors === 'match' ? xColors : processColorOpts(opts.yColors);\n  const xScale = chroma.scale(xColors).mode(opts.colorSpace);\n  const yScale = chroma.scale(yColors).mode(opts.colorSpace); // Our next step is to generate a pseudo-random grid of {x, y} points,\n  // (or to simply utilize the points that were passed to us)\n\n  const points = opts.points || getPoints(opts, rand); // Once we have the points array, run the triangulation\n\n  var geomIndices = Delaunator.from(points).triangles; // ...and then generate geometry and color data:\n  // use a different (salted) randomizer for the color function so that\n  // swapping out color functions doesn't change the pattern geometry itself\n\n  const salt = 42;\n  const cRand = mulberry32(opts.seed ? opts.seed + salt : null);\n  const polys = [];\n\n  for (let i = 0; i < geomIndices.length; i += 3) {\n    // convert shallow array-packed vertex indices into 3-tuples\n    const vertexIndices = [geomIndices[i], geomIndices[i + 1], geomIndices[i + 2]]; // grab a copy of the actual vertices to use for calculations\n\n    const vertices = vertexIndices.map(i => points[i]);\n    const {\n      width,\n      height\n    } = opts;\n\n    const norm = num => Math.max(0, Math.min(1, num));\n\n    const centroid = getCentroid(vertices);\n    const xPercent = norm(centroid.x / width);\n    const yPercent = norm(centroid.y / height);\n    const color = opts.colorFunction({\n      centroid,\n      // centroid of polygon, non-normalized\n      xPercent,\n      // x-coordinate of centroid, normalized to [0, 1]\n      yPercent,\n      // y-coordinate of centroid, normalized to [0, 1]\n      vertexIndices,\n      // vertex indices of the polygon\n      vertices,\n      // [x, y] vertices of the polygon\n      xScale,\n      // x-colors scale for the pattern\n      yScale,\n      // y-colors scale for the pattern\n      points,\n      // array of generated points for the pattern\n      opts,\n      // options used to initialize the pattern\n      random: cRand // seeded randomization function for use by color functions\n\n    });\n    polys.push({\n      vertexIndices,\n      centroid,\n      color // chroma color object\n\n    });\n  }\n\n  return new Pattern(points, polys, opts);\n}\n\nconst getPoints = (opts, random) => {\n  const {\n    width,\n    height,\n    cellSize,\n    variance\n  } = opts; // pad by 2 cells outside the visible area on each side to ensure we fully\n  // cover the 'artboard'\n\n  const colCount = Math.floor(width / cellSize) + 4;\n  const rowCount = Math.floor(height / cellSize) + 4; // determine bleed values to ensure that the grid is centered within the\n  // artboard\n\n  const bleedX = (colCount * cellSize - width) / 2;\n  const bleedY = (rowCount * cellSize - height) / 2; // apply variance to cellSize to get cellJitter in pixels\n\n  const cellJitter = cellSize * variance;\n\n  const getJitter = () => (random() - 0.5) * cellJitter;\n\n  const pointCount = colCount * rowCount;\n  const halfCell = cellSize / 2;\n  const points = Array(pointCount).fill(null).map((_, i) => {\n    const col = i % colCount;\n    const row = Math.floor(i / colCount); // [x, y, z]\n\n    return [-bleedX + col * cellSize + halfCell + getJitter(), -bleedY + row * cellSize + halfCell + getJitter()];\n  });\n  return points;\n}; // tweak some of the exports here\n\n\ntrianglify.utils = {\n  mix: chroma.mix,\n  colorbrewer\n};\ntrianglify.colorFunctions = colorFunctions;\ntrianglify.Pattern = Pattern;\ntrianglify.defaultOptions = defaultOptions;\n\nmodule.exports = trianglify;\n","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","import React, { useCallback, useMemo, useRef, useEffect, useState } from 'react'\nimport trianglify from 'trianglify'\n\nfunction Trianglify ({\n  output = 'canvas',\n  width = 600,\n  height = 400,\n  ...props\n}) {\n  const ref = useRef()\n  const [, forceUpdate] = useState({})\n  const svgOutput = useCallback((generateOutput) => {\n    generateOutput(ref.current)\n  }, [])\n\n  const canvasOutput = useCallback((generateOutput) => {\n    const canvas = generateOutput()\n    const ctx = ref.current.getContext('2d')\n    ctx.drawImage(canvas,0, 0, width, height)\n  }, [])\n\n  const choosenOutput = useMemo(() => ({\n    canvas: {\n      output: 'toCanvas',\n      method: canvasOutput,\n    },\n    svg: {\n      output: 'toSVG',\n      method: svgOutput,\n    },\n  }), [])\n\n  useEffect(() => {\n    const pattern = trianglify({\n      width,\n      height,\n      ...props,\n    })\n\n    const generateOutput = pattern[choosenOutput[output].output]\n\n    if (!generateOutput) {\n      throw new Error('Invalid output. Only \"canvas\" or \"svg\" are allowed.')\n    }\n\n    const outputMethod = choosenOutput[output].method(generateOutput)\n\n    forceUpdate({})\n  }, [])\n\n  const Tag = output\n  return <Tag ref={ref} width={width} height={height} />\n}\n\nexport default Trianglify\n"],"sourceRoot":""}